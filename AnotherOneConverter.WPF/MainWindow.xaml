<MahApps:MetroWindow
    x:Class="AnotherOneConverter.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls="clr-namespace:AnotherOneConverter.WPF.Controls"
    xmlns:Converters="clr-namespace:AnotherOneConverter.WPF.Converters"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:MaterialConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:MahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:MahAppsDialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    mc:Ignorable="d"
    Title="PDF Converter"
    MinHeight="480"
    MinWidth="640"
    Height="600"
    Width="800"
    Icon="logo.ico"
    BorderThickness="1"
    Background="#fafafa"
    WindowTransitionsEnabled="False"
    MahAppsDialog:DialogParticipation.Register="{Binding}"
    BorderBrush="{StaticResource AccentColorBrush}"
    DataContext="{Binding Main, Source={StaticResource Locator}}" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></Converters:BooleanToVisibilityConverter>

            <MaterialConverters:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"></MaterialConverters:NullableToVisibilityConverter>

            <MaterialConverters:NotConverter x:Key="NotConverter"></MaterialConverters:NotConverter>

            <DataTemplate x:Key="ProjectHeaderTemplate">
                <Border Padding="12">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="18" Text="{Binding DisplayName}"></TextBlock>
                        <TextBlock FontSize="18" FontWeight="Bold" Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}">*</TextBlock>
                    </StackPanel>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="ProjectContentTemplate">
                <DataGrid
                    AllowDrop="True"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserResizeRows="False"
                    CanUserReorderColumns="False"
                    HeadersVisibility="Column"
                    SelectionUnit="FullRow"
                    GridLinesVisibility="Horizontal"
                    Drop="OnDataGridDrop"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource NotConverter}}"
                    ItemsSource="{Binding Documents}"
                    SelectedItem="{Binding ActiveDocument, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="File Name" Binding="{Binding FileName, Mode=OneWay}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Changed" Binding="{Binding LastWriteTime, StringFormat=g, Mode=OneWay}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="20px"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="File">
                <MenuItem Header="Open File..." Command="{Binding ActiveProject.OpenDocuments}" CommandParameter=""></MenuItem>
                <MenuItem Header="Export" Command="{Binding ActiveProject.Export}"></MenuItem>
                <MenuItem Header="Export As..." Command="{Binding ActiveProject.ExportAs}"></MenuItem>
                <MenuItem Header="Export to One" Command="{Binding ActiveProject.ExportToOne}"></MenuItem>
                <MenuItem Header="Export to One As..." Command="{Binding ActiveProject.ExportToOneAs}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Exit"></MenuItem>
            </MenuItem>
            <MenuItem Header="Project">
                <MenuItem Header="New Project" Command="{Binding CreateProject}"></MenuItem>
                <MenuItem Header="Open Project..." Command="{Binding OpenProject}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Save Project" Command="{Binding ActiveProject.Save}"></MenuItem>
                <MenuItem Header="Save Project As..." Command="{Binding ActiveProject.SaveAs}"></MenuItem>
                <MenuItem Header="Close Project" Command="{Binding ActiveProject.Close}"></MenuItem>
            </MenuItem>
        </Menu>

        <TabControl
            Grid.Row="1"
            SelectedItem="{Binding ActiveProject, Mode=TwoWay}"
            ItemsSource="{Binding Projects}"
            ItemTemplate="{StaticResource ProjectHeaderTemplate}"
            ContentTemplate="{StaticResource ProjectContentTemplate}">
        </TabControl>

        <StackPanel
            Grid.Row="1"
            Margin="18"
            Orientation="Horizontal"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right">

            <Button
                ToolTip="Up"
                Margin="0,0,12,0"
                HorizontalAlignment="Left"
                Command="{Binding ActiveProject.DocumentUp}"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Material:PackIcon Kind="ArrowUpBold" Height="24" Width="24" />
            </Button>

            <Button
                ToolTip="Down"
                Margin="0,0,12,0"
                HorizontalAlignment="Left"
                Command="{Binding ActiveProject.DocumentDown}"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Material:PackIcon Kind="ArrowDownBold" Height="24" Width="24" />
            </Button>

            <Material:PopupBox
                ToolTip="Export"
                Margin="0,0,18,0"
                PopupMode="MouseOver"
                IsEnabled="{Binding ActiveProject.IsLoading, Converter={StaticResource NotConverter}}"
                ToggleCheckedContentCommand="{Binding ActiveProject.Export}"
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
                <Material:PopupBox.ToggleCheckedContent>
                    <Material:PackIcon Kind="ArrowTopRight" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleCheckedContent>

                <Material:PopupBox.ToggleContent>
                    <Material:PackIcon Kind="FileExport" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleContent>

                <StackPanel>
                    <Button ToolTip="Export to One As" Command="{Binding ActiveProject.ExportToOneAs}" Foreground="{StaticResource IdealForegroundColorBrush}">
                        1 As
                    </Button>

                    <Button ToolTip="Export to One" Command="{Binding ActiveProject.ExportToOne}" Foreground="{StaticResource IdealForegroundColorBrush}">
                        1
                    </Button>

                    <Button ToolTip="Export As" Command="{Binding ActiveProject.ExportAs}" Foreground="{StaticResource IdealForegroundColorBrush}">
                        As
                    </Button>
                </StackPanel>
            </Material:PopupBox>

            <Material:PopupBox
                ToolTip="Open"
                PopupMode="MouseOver"
                IsEnabled="{Binding ActiveProject.IsLoading, Converter={StaticResource NotConverter}}"
                ToggleCheckedContentCommand="{Binding ActiveProject.OpenDocuments}"
                ToggleCheckedContentCommandParameter=""
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
                <Material:PopupBox.ToggleCheckedContent>
                    <Material:PackIcon Kind="ArrowTopRight" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleCheckedContent>

                <Material:PopupBox.ToggleContent>
                    <Material:PackIcon Kind="File" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleContent>

                <StackPanel>
                    <Button ToolTip="Open pdf file" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="pdf">
                        <Material:PackIcon Kind="FilePdf" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                    <Button ToolTip="Open excel file" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="excel">
                        <Material:PackIcon Kind="FileExcel" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                    <Button ToolTip="Open word file" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="word">
                        <Material:PackIcon Kind="FileWord" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                </StackPanel>
            </Material:PopupBox>
        </StackPanel>

        <Material:Card 
            Grid.Row="1"
            Padding="4"
            UniformCornerRadius="14"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Visibility="{Binding ActiveProject.Progress, Converter={StaticResource NullableToVisibilityConverter}}">
            <ProgressBar
                IsIndeterminate="True"
                Controls:ProgressBarExtension.AnimatedValue="{Binding ActiveProject.Progress}"
                Maximum="{Binding ActiveProject.Documents.Count}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"></ProgressBar>
        </Material:Card>

        <StatusBar Grid.Row="2">
            <StatusBarItem Content="{Binding ActiveProject.StatusInfo}"></StatusBarItem>
        </StatusBar>
    </Grid>

</MahApps:MetroWindow>
