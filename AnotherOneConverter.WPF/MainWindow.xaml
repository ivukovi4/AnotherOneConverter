<MahApps:MetroWindow
    x:Class="AnotherOneConverter.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:AnotherOneConverter.WPF.Properties"
    xmlns:Controls="clr-namespace:AnotherOneConverter.WPF.Controls"
    xmlns:Converters="clr-namespace:AnotherOneConverter.WPF.Converters"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:MaterialConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:MahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:MahAppsDialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:Taskbar="http://www.hardcodet.net/taskbar" 
    mc:Ignorable="d"
    Title="{x:Static p:Resources.ApplicationTitle}"
    MinHeight="480"
    MinWidth="640"
    Height="600"
    Width="800"
    Icon="logo.ico"
    BorderThickness="1"
    Background="#fafafa"
    WindowTransitionsEnabled="False"
    Activated="OnActivated"
    Deactivated="OnDeactivated"
    MahAppsDialog:DialogParticipation.Register="{Binding}"
    BorderBrush="{StaticResource AccentColorBrush}"
    DataContext="{Binding Main, Source={StaticResource Locator}}" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></Converters:BooleanToVisibilityConverter>

            <MaterialConverters:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"></MaterialConverters:NullableToVisibilityConverter>

            <MaterialConverters:NotConverter x:Key="NotConverter"></MaterialConverters:NotConverter>

            <DataTemplate x:Key="ProjectHeaderTemplate">
                <Border Padding="12">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="18" Text="{Binding DisplayName}"></TextBlock>
                        <TextBlock FontSize="18" FontWeight="Bold" Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}">*</TextBlock>
                    </StackPanel>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="ProjectContentTemplate">
                <DataGrid
                    AllowDrop="True"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserResizeRows="False"
                    CanUserReorderColumns="False"
                    HeadersVisibility="Column"
                    SelectionUnit="FullRow"
                    Drop="OnDataGridDrop"
                    Sorting="OnDataGridSorting"
                    GridLinesVisibility="Horizontal"
                    ItemsSource="{Binding Documents}"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource NotConverter}}">
                    <i:Interaction.Behaviors>
                        <Controls:MultiSelectBehavior SelectedItems="{Binding ActiveDocuments}"></Controls:MultiSelectBehavior>
                    </i:Interaction.Behaviors>

                    <DataGrid.Resources>
                        <Controls:BindingProxy x:Key="ProjectProxy" Data="{Binding}"></Controls:BindingProxy>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Header="{x:Static p:Resources.ColumnFileNameHeader}"
                            Binding="{Binding FileName, Mode=OneWay}"
                            SortDirection="{Binding Data.FileNameSortDirection, Source={StaticResource ProjectProxy}, Mode=TwoWay}">
                        </DataGridTextColumn>

                        <DataGridTextColumn
                            Width="200"
                            Header="{x:Static p:Resources.ColumnChangedHeader}"
                            Binding="{Binding LastWriteTime, StringFormat=g, Mode=OneWay}"
                            SortDirection="{Binding Data.LastWriteTimeSortDirection, Source={StaticResource ProjectProxy}, Mode=TwoWay}"></DataGridTextColumn>
                    </DataGrid.Columns>

                </DataGrid>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="20px"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Taskbar:TaskbarIcon
            x:Name="TaskbarIcon"
            IconSource="logo.ico"
            ToolTipText="{Binding {x:Static p:Resources.ApplicationTitle}}"></Taskbar:TaskbarIcon>

        <Menu>
            <MenuItem Header="{x:Static p:Resources.MenuItemFileHeader}">
                <MenuItem Header="{x:Static p:Resources.MenuItemOpenFileHeader}" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter=""></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemExportHeader}" Command="{Binding ActiveProject.Export}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemExportAsHeader}" Command="{Binding ActiveProject.ExportAs}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemExportToOneHeader}" Command="{Binding ActiveProject.ExportToOne}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemExportToOneAsHeader}" Command="{Binding ActiveProject.ExportToOneAs}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static p:Resources.MenuItemExitHeader}" Click="OnExitClick"></MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuItemProjectHeader}">
                <MenuItem Header="{x:Static p:Resources.MenuItemNewProjectHeader}" Command="{Binding CreateProject}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemOpenProjectHeader}" Command="{Binding OpenProject}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="{x:Static p:Resources.MenuItemSaveProjectHeader}" Command="{Binding ActiveProject.Save}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemSaveProjectAsHeader}" Command="{Binding ActiveProject.SaveAs}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemCloseProjectHeader}" Command="{Binding ActiveProject.Close}"></MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuItemSettingsHeader}"></MenuItem>
            </MenuItem>
        </Menu>

        <TabControl
            x:Name="TabControl"
            Grid.Row="1"
            SelectedItem="{Binding ActiveProject, Mode=TwoWay}"
            ItemsSource="{Binding Projects}"
            ItemTemplate="{StaticResource ProjectHeaderTemplate}"
            ContentTemplate="{StaticResource ProjectContentTemplate}">
        </TabControl>

        <StackPanel
            Grid.Row="1"
            Margin="18"
            Orientation="Horizontal"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right">

            <Button
                ToolTip="{x:Static p:Resources.ButtonUpTooltip}"
                Margin="0,0,12,0"
                HorizontalAlignment="Left"
                Command="{Binding ActiveProject.DocumentUpCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Material:PackIcon Kind="ArrowUpBold" Height="24" Width="24" />
            </Button>

            <Button
                ToolTip="{x:Static p:Resources.ButtonDownTooltip}"
                Margin="0,0,12,0"
                HorizontalAlignment="Left"
                Command="{Binding ActiveProject.DocumentDownCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Material:PackIcon Kind="ArrowDownBold" Height="24" Width="24" />
            </Button>

            <Button
                ToolTip="{x:Static p:Resources.ButtonDeleteDocumentTooltip}"
                Margin="0,0,12,0"
                HorizontalAlignment="Left"
                Command="{Binding ActiveProject.DeleteDocumentsCommand}"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                <Material:PackIcon Kind="Delete" Height="24" Width="24" />
            </Button>

            <Material:PopupBox
                ToolTip="{x:Static p:Resources.PopupBoxExportTooltip}"
                Margin="0,0,12,0"
                PopupMode="MouseOver"
                IsEnabled="{Binding ActiveProject.IsLoading, Converter={StaticResource NotConverter}}"
                ToggleCheckedContentCommand="{Binding ActiveProject.Export}"
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
                <Material:PopupBox.ToggleCheckedContent>
                    <Material:PackIcon Kind="ArrowTopRight" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleCheckedContent>

                <Material:PopupBox.ToggleContent>
                    <Material:PackIcon Kind="FileExport" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleContent>

                <StackPanel>
                    <Button
                        ToolTip="{x:Static p:Resources.ButtonExportToOneAsTooltip}"
                        Command="{Binding ActiveProject.ExportToOneAs}"
                        Foreground="{StaticResource IdealForegroundColorBrush}"
                        Content="{x:Static p:Resources.ButtonExportToOneAsContent}"></Button>

                    <Button
                        ToolTip="{x:Static p:Resources.ButtonExportToOneTooltip}"
                        Command="{Binding ActiveProject.ExportToOne}"
                        Foreground="{StaticResource IdealForegroundColorBrush}"
                        Content="{x:Static p:Resources.ButtonExportToOneContent}"></Button>

                    <Button
                        ToolTip="{x:Static p:Resources.ButtonExportAsTooltip}"
                        Command="{Binding ActiveProject.ExportAs}"
                        Foreground="{StaticResource IdealForegroundColorBrush}"
                        Content="{x:Static p:Resources.ButtonExportAsContent}"></Button>
                </StackPanel>
            </Material:PopupBox>

            <Material:PopupBox
                ToolTip="{x:Static p:Resources.PopupBoxOpenTooltip}"
                PopupMode="MouseOver"
                IsEnabled="{Binding ActiveProject.IsLoading, Converter={StaticResource NotConverter}}"
                ToggleCheckedContentCommand="{Binding ActiveProject.OpenDocuments}"
                ToggleCheckedContentCommandParameter=""
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
                <Material:PopupBox.ToggleCheckedContent>
                    <Material:PackIcon Kind="ArrowTopRight" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleCheckedContent>

                <Material:PopupBox.ToggleContent>
                    <Material:PackIcon Kind="File" Width="24" Height="24"></Material:PackIcon>
                </Material:PopupBox.ToggleContent>

                <StackPanel>
                    <Button ToolTip="{x:Static p:Resources.ButtonOpenPdfTooltip}" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="pdf">
                        <Material:PackIcon Kind="FilePdf" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                    <Button ToolTip="{x:Static p:Resources.ButtonOpenExcelTooltip}" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="excel">
                        <Material:PackIcon Kind="FileExcel" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                    <Button ToolTip="{x:Static p:Resources.ButtonOpenWordTooltip}" Command="{Binding ActiveProject.OpenDocuments}" CommandParameter="word">
                        <Material:PackIcon Kind="FileWord" Foreground="{StaticResource IdealForegroundColorBrush}"></Material:PackIcon>
                    </Button>
                </StackPanel>
            </Material:PopupBox>
        </StackPanel>

        <Material:Card 
            Grid.Row="1"
            Padding="4"
            UniformCornerRadius="14"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Visibility="{Binding ActiveProject.Progress, Converter={StaticResource NullableToVisibilityConverter}}">
            <ProgressBar
                IsIndeterminate="True"
                Controls:ProgressBarExtension.AnimatedValue="{Binding ActiveProject.Progress}"
                Maximum="{Binding ActiveProject.Documents.Count}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"></ProgressBar>
        </Material:Card>

        <StatusBar Grid.Row="2">
            <StatusBarItem Content="{Binding ActiveProject.StatusInfo}"></StatusBarItem>
        </StatusBar>
    </Grid>

</MahApps:MetroWindow>
